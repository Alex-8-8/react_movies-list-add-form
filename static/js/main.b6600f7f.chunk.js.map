{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FormField/FormField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","FormField","props","name","value","label","placeholder","onChange","htmlFor","required","type","autoComplete","NewMovie","state","handleChange","event","target","setState","trim","handleSubmit","preventDefault","imbdId","addMovie","this","onSubmit","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6600f7f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const FormField = (props) => {\n  const {\n    name,\n    value,\n    label,\n    placeholder,\n    onChange,\n  } = props;\n\n  return (\n    <div className=\"field\">\n      <label htmlFor={name} className=\"label\">\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          required\n          name={name}\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder={placeholder}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nFormField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormField } from '../FormField/FormField';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { target: { name, value } } = event;\n\n    this.setState({\n      [name]: value.trim(),\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imbdId,\n    } = this.state;\n\n    this.props.addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imbdId,\n    });\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return (\n      <form name=\"newMovie\" onSubmit={this.handleSubmit}>\n        <FormField\n          name=\"title\"\n          value={title}\n          label=\"Movie title\"\n          placeholder=\"Enter movie name\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          name=\"description\"\n          value={description}\n          label=\"Movie description\"\n          placeholder=\"Enter movie description\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          name=\"imgUrl\"\n          value={imgUrl}\n          label=\"Movie imgUrl\"\n          placeholder=\"Enter movie imgUrl\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          label=\"imdbUrl\"\n          placeholder=\"Enter movie imdbUrl\"\n          onChange={this.handleChange}\n        />\n        <FormField\n          name=\"imdbId\"\n          value={imdbId}\n          label=\"Movie imdbId\"\n          placeholder=\"Enter movie imdbId\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\" className=\"button\">Add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((prevState) => {\n      return {\n        movies: [...prevState.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}